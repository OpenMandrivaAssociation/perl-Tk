diff -Naur Tk-804.032.orig/objGlue.c Tk-804.032/objGlue.c
--- Tk-804.032.orig/objGlue.c	2014-04-28 19:54:40.000000000 +0400
+++ Tk-804.032/objGlue.c	2014-04-28 19:54:40.000000000 +0400
@@ -554,6 +554,10 @@
       sv_utf8_upgrade(objPtr);
 #endif
      s = SvPV(objPtr, len);
+     if (!s)
+      {
+       return NULL;
+      }
 #ifdef SvUTF8
      if (!is_utf8_string(s,len))
       {
@@ -581,6 +585,10 @@
    else
     {
      s = LangString(objPtr);
+     if (!s)
+      {
+       return NULL;
+      }
 #ifdef SvUTF8
      if (!is_utf8_string(s,strlen(s)))
       {
diff -Naur Tk-804.032.orig/pTk/mTk/generic/tkFont.c Tk-804.032/pTk/mTk/generic/tkFont.c
--- Tk-804.032.orig/pTk/mTk/generic/tkFont.c	2014-04-28 19:54:40.000000000 +0400
+++ Tk-804.032/pTk/mTk/generic/tkFont.c	2014-04-28 19:54:40.000000000 +0400
@@ -1044,6 +1044,7 @@
     TkFont *fontPtr, *firstFontPtr, *oldFontPtr;
     int new, descent;
     NamedFont *nfPtr;
+    char *fontString;
 
     fiPtr = ((TkWindow *) tkwin)->mainPtr->fontInfoPtr;
     if (objPtr->typePtr != &tkFontObjType) {
@@ -1077,8 +1078,12 @@
 	cacheHashPtr = oldFontPtr->cacheHashPtr;
 	FreeFontObjProc(objPtr);
     } else {
+	fontString = Tcl_GetString(objPtr);
+	if (fontString == NULL) {
+		fontString = "";
+	}
 	cacheHashPtr = Tcl_CreateHashEntry(&fiPtr->fontCache,
-		Tcl_GetString(objPtr), &new);
+		fontString, &new);
     }
     firstFontPtr = (TkFont *) Tcl_GetHashValue(cacheHashPtr);
     for (fontPtr = firstFontPtr; (fontPtr != NULL);
@@ -1095,8 +1100,12 @@
      * The desired font isn't in the table.  Make a new one.
      */
 
+    fontString = Tcl_GetString(objPtr);
+    if (fontString == NULL) {
+	    fontString = "";
+    }
     namedHashPtr = Tcl_FindHashEntry(&fiPtr->namedTable,
-	    Tcl_GetString(objPtr));
+	    fontString);
     if (namedHashPtr != NULL) {
 	/*
 	 * Construct a font based on a named font.
@@ -1111,7 +1120,7 @@
 	 * Native font?
 	 */
 
-	fontPtr = TkpGetNativeFont(tkwin, Tcl_GetString(objPtr));
+	fontPtr = TkpGetNativeFont(tkwin, fontString);
 	if (fontPtr == NULL) {
 	    TkFontAttributes fa;
 	    Tcl_Obj *dupObjPtr = Tcl_DuplicateObj(objPtr);
